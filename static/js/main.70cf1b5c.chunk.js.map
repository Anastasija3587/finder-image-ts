{"version":3,"sources":["components/Loader/Loader.module.css","services/api.ts","components/SearchBar/SearchBar.tsx","components/ImageGalleryItem/ImageGalleryItem.tsx","components/ImageGallery/ImageGallery.tsx","components/Button/Button.tsx","components/Loader/Loader.tsx","components/Modal/Modal.tsx","components/App.tsx","index.tsx"],"names":["module","exports","keyAPI","getItems","searchQuery","page","axios","get","SearchBar","state","value","handleChange","event","setState","target","handleSubmit","preventDefault","onSubmit","props","this","className","type","onChange","autoComplete","placeholder","Component","ImageGalleryItem","item","webformatURL","id","clickImg","onClick","role","src","alt","ImageGallery","items","map","key","Button","clickMore","window","scrollTo","top","document","documentElement","scrollHeight","behavior","Loader","styles","loader","color","height","width","Modal","closeImg","e","code","handleCloseImg","addEventListener","removeEventListener","idForImage","itemImage","find","largeImageURL","App","isLoading","pageNumber","openModal","fetching","query","API","then","res","data","hits","catch","err","Error","finally","prevState","_","length","React","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.70cf1b5c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__3B8L7\"};","/* eslint-disable max-len */\nimport axios from 'axios';\n\nconst keyAPI = '14824365-e6696933d91165e226b0fb92a';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const getItems = (searchQuery = '', page = 1): Promise<any> =>\n  axios.get(\n    `https://pixabay.com/api/?q=${searchQuery}&page=${page}&key=${keyAPI}&image_type=photo&orientation=horizontal&per_page=12`,\n  );\n\nexport const w = (): unknown => null;\n","import React, { Component } from 'react';\n\ninterface Props {\n  onSubmit: (value: string) => void;\n}\n\ninterface State {\n  value: string;\n}\n\nclass SearchBar extends Component<Props, State> {\n  state: State = {\n    value: '',\n  };\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    this.setState({ value: event.target.value });\n  };\n\n  handleSubmit = (event: React.FormEvent): void => {\n    event.preventDefault();\n    const { onSubmit } = this.props;\n    const { value } = this.state;\n    onSubmit(value);\n    this.setState({ value: '' });\n  };\n\n  render(): JSX.Element {\n    const { value } = this.state;\n    return (\n      <header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            value={value}\n            onChange={this.handleChange}\n            className=\"SearchForm-input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            placeholder=\"Search images and photos\"\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React from 'react';\n\ninterface Item {\n  [key: string]: string;\n}\n\ninterface Props {\n  item: Item;\n  clickImg: (id?: string | undefined) => void;\n}\n\nconst ImageGalleryItem = ({\n  item: { webformatURL, id },\n  clickImg,\n}: Props): JSX.Element => (\n  <li\n    className=\"ImageGalleryItem\"\n    onClick={(): void => clickImg(id)}\n    role=\"presentation\"\n  >\n    <img id={id} src={webformatURL} alt=\"\" className=\"ImageGalleryItem-image\" />\n  </li>\n);\n\nexport default ImageGalleryItem;\n","import React from 'react';\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\n\ninterface Item {\n  [key: string]: string;\n}\n\ninterface Props {\n  items: Array<Item>;\n  clickImg: () => void;\n}\n\nconst ImageGallery = ({ items, clickImg }: Props): JSX.Element => (\n  <ul className=\"ImageGallery\">\n    {items.map((item: Item) => (\n      <ImageGalleryItem key={item.id} item={item} clickImg={clickImg} />\n    ))}\n  </ul>\n);\n\nexport default ImageGallery;\n","import React from 'react';\n\ntype props = {\n  clickMore: () => void;\n};\n\nconst Button = ({ clickMore }: props): JSX.Element => {\n  window.scrollTo({\n    top: document.documentElement.scrollHeight,\n    behavior: 'smooth',\n  });\n  return (\n    <button onClick={clickMore} className=\"Button\" type=\"button\">\n      Load more\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\nimport LoaderComponent from 'react-loader-spinner';\nimport styles from './Loader.module.css';\n\nconst Loader = (): JSX.Element => (\n  <div className={styles.loader}>\n    <LoaderComponent type=\"Puff\" color=\"grey\" height={100} width={100} />\n  </div>\n);\n\nexport default Loader;\n","import React, { Component } from 'react';\n\ninterface Item {\n  [key: string]: string;\n}\n\ninterface MyProps {\n  clickImg: (id?: string | undefined) => void;\n  items: Array<Item>;\n  idForImage: string | undefined;\n}\n\nclass Modal extends Component<MyProps, {}> {\n  state = {};\n\n  componentDidMount(): void {\n    window.addEventListener('keydown', this.closeImg);\n  }\n\n  componentWillUnmount(): void {\n    window.removeEventListener('keydown', this.closeImg);\n  }\n\n  closeImg = (e: KeyboardEvent): void => {\n    const { clickImg } = this.props;\n    if (e.code !== 'Escape') return;\n    clickImg();\n  };\n\n  handleCloseImg = (e: React.MouseEvent): void => {\n    const { clickImg } = this.props;\n    const overlay = e.target as HTMLInputElement;\n    if (overlay.className !== 'Overlay') return;\n    clickImg();\n  };\n\n  render(): JSX.Element {\n    const { items, idForImage } = this.props;\n    const itemImage = items.find((item: Item) => item.id === idForImage);\n    return (\n      <div\n        onClick={this.handleCloseImg}\n        className=\"Overlay\"\n        role=\"presentation\"\n      >\n        <div className=\"Modal\">\n          <img src={itemImage && itemImage.largeImageURL} alt=\"\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Modal;\n","/* eslint-disable operator-linebreak */\n/* eslint-disable arrow-parens */\nimport React from 'react';\nimport * as API from '../services/api';\nimport SearchBar from './SearchBar/SearchBar';\nimport ImageGallery from './ImageGallery/ImageGallery';\nimport Button from './Button/Button';\nimport Loader from './Loader/Loader';\nimport Modal from './Modal/Modal';\n\ninterface Items {\n  [key: string]: string;\n}\n\ninterface MyState {\n  items: Array<Items>;\n  isLoading: boolean;\n  searchQuery: string;\n  pageNumber: number;\n  openModal: boolean;\n  idForImage: string | undefined;\n}\n\ntype MyProps = {};\n\nclass App extends React.Component<MyProps, MyState> {\n  state: MyState = {\n    items: [],\n    isLoading: false,\n    searchQuery: '',\n    pageNumber: 1,\n    openModal: false,\n    idForImage: '',\n  };\n\n  componentDidMount(): void {\n    this.fetching();\n  }\n\n  componentDidUpdate(_: MyState, prevState: MyState): void {\n    const { searchQuery, pageNumber } = this.state;\n    if (\n      prevState.searchQuery !== searchQuery ||\n      prevState.pageNumber !== pageNumber\n    ) {\n      this.fetching(searchQuery, pageNumber);\n    }\n  }\n\n  fetching = (query?: string, pageNumber?: number): void => {\n    this.setState({ isLoading: true });\n    API.getItems(query, pageNumber)\n      .then(res =>\n        this.setState(state => ({\n          items: [...state.items, ...res.data.hits],\n        })),\n      )\n      .catch(err => {\n        throw new Error(err);\n      })\n      .finally(() => this.setState({ isLoading: false }));\n  };\n\n  handleSubmit = (value: string): void => {\n    this.setState({ searchQuery: value, items: [], pageNumber: 1 });\n  };\n\n  clickImg = (id?: string | undefined): void => {\n    const { openModal } = this.state;\n    this.setState({ openModal: !openModal, idForImage: id });\n  };\n\n  clickMore = (): void => {\n    this.setState(prevState => ({ pageNumber: prevState.pageNumber + 1 }));\n  };\n\n  render(): JSX.Element {\n    const { items, isLoading, openModal, idForImage } = this.state;\n    return (\n      <>\n        <SearchBar onSubmit={this.handleSubmit} />\n        {isLoading && <Loader />}\n        <ImageGallery items={items} clickImg={this.clickImg} />\n        {items.length > 0 && <Button clickMore={this.clickMore} />}\n        {openModal && (\n          <Modal\n            items={items}\n            idForImage={idForImage}\n            clickImg={this.clickImg}\n          />\n        )}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './style.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}